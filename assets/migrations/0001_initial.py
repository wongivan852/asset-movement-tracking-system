# Generated by Django 4.2.23 on 2025-08-15 08:16

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("locations", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "asset_id",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "serial_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "model_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "manufacturer",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("purchase_date", models.DateField(blank=True, null=True)),
                (
                    "purchase_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "current_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("in_transit", "In Transit"),
                            ("in_use", "In Use"),
                            ("maintenance", "Under Maintenance"),
                            ("retired", "Retired"),
                        ],
                        default="available",
                        max_length=20,
                    ),
                ),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("damaged", "Damaged"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("barcode", models.CharField(blank=True, max_length=100, null=True)),
                ("qr_code", models.CharField(blank=True, max_length=100, null=True)),
                ("warranty_expiry", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["asset_id"],
            },
        ),
        migrations.CreateModel(
            name="AssetCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "Asset Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AssetRemark",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("maintenance", "Maintenance"),
                            ("condition", "Condition Update"),
                            ("movement", "Movement"),
                            ("inspection", "Inspection"),
                            ("general", "General Note"),
                            ("issue", "Issue/Problem"),
                            ("repair", "Repair"),
                        ],
                        default="general",
                        max_length=20,
                    ),
                ),
                ("remark", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_important", models.BooleanField(default=False)),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="remarks",
                        to="assets.asset",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="asset",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="assets",
                to="assets.assetcategory",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_assets",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="current_location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="assets",
                to="locations.location",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="responsible_person",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_assets",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="asset",
            index=models.Index(
                fields=["asset_id"], name="assets_asse_asset_i_501f65_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="asset",
            index=models.Index(fields=["status"], name="assets_asse_status_347ce9_idx"),
        ),
        migrations.AddIndex(
            model_name="asset",
            index=models.Index(
                fields=["current_location"], name="assets_asse_current_fab622_idx"
            ),
        ),
    ]
